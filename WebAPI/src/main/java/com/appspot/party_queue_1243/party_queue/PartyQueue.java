/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-04-08 17:16:44 UTC)
 * on 2016-04-20 at 17:15:36 UTC 
 * Modify at your own risk.
 */

package com.appspot.party_queue_1243.party_queue;

/**
 * Service definition for PartyQueue (v1).
 *
 * <p>
 * PARTY QUEUE API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link PartyQueueRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class PartyQueue extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the party_queue library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://party-queue-1243.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "party_queue/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public PartyQueue(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  PartyQueue(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Partyqueue collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code PartyQueue party_queue = new PartyQueue(...);}
   *   {@code PartyQueue.Partyqueue.List request = party_queue.partyqueue().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Partyqueue partyqueue() {
    return new Partyqueue();
  }

  /**
   * The "partyqueue" collection of methods.
   */
  public class Partyqueue {

    /**
     * Create a request for the method "partyqueue.add_song".
     *
     * This request holds the parameters needed by the party_queue server.  After setting any optional
     * parameters, call the {@link AddSong#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAddSongRequest}
     * @return the request
     */
    public AddSong addSong(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAddSongRequest content) throws java.io.IOException {
      AddSong result = new AddSong(content);
      initialize(result);
      return result;
    }

    public class AddSong extends PartyQueueRequest<com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistResponse> {

      private static final String REST_PATH = "add_song_to_playlist";

      /**
       * Create a request for the method "partyqueue.add_song".
       *
       * This request holds the parameters needed by the the party_queue server.  After setting any
       * optional parameters, call the {@link AddSong#execute()} method to invoke the remote operation.
       * <p> {@link
       * AddSong#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAddSongRequest}
       * @since 1.13
       */
      protected AddSong(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAddSongRequest content) {
        super(PartyQueue.this, "POST", REST_PATH, content, com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistResponse.class);
      }

      @Override
      public AddSong setAlt(java.lang.String alt) {
        return (AddSong) super.setAlt(alt);
      }

      @Override
      public AddSong setFields(java.lang.String fields) {
        return (AddSong) super.setFields(fields);
      }

      @Override
      public AddSong setKey(java.lang.String key) {
        return (AddSong) super.setKey(key);
      }

      @Override
      public AddSong setOauthToken(java.lang.String oauthToken) {
        return (AddSong) super.setOauthToken(oauthToken);
      }

      @Override
      public AddSong setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddSong) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddSong setQuotaUser(java.lang.String quotaUser) {
        return (AddSong) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddSong setUserIp(java.lang.String userIp) {
        return (AddSong) super.setUserIp(userIp);
      }

      @Override
      public AddSong set(String parameterName, Object value) {
        return (AddSong) super.set(parameterName, value);
      }
    }
    /**
     * Creates a playlist for the user
     *
     * Create a request for the method "partyqueue.create_playlist".
     *
     * This request holds the parameters needed by the party_queue server.  After setting any optional
     * parameters, call the {@link CreatePlaylist#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistRequest}
     * @return the request
     */
    public CreatePlaylist createPlaylist(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistRequest content) throws java.io.IOException {
      CreatePlaylist result = new CreatePlaylist(content);
      initialize(result);
      return result;
    }

    public class CreatePlaylist extends PartyQueueRequest<com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistResponse> {

      private static final String REST_PATH = "create_playlist";

      /**
       * Creates a playlist for the user
       *
       * Create a request for the method "partyqueue.create_playlist".
       *
       * This request holds the parameters needed by the the party_queue server.  After setting any
       * optional parameters, call the {@link CreatePlaylist#execute()} method to invoke the remote
       * operation. <p> {@link CreatePlaylist#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistRequest}
       * @since 1.13
       */
      protected CreatePlaylist(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistRequest content) {
        super(PartyQueue.this, "POST", REST_PATH, content, com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistResponse.class);
      }

      @Override
      public CreatePlaylist setAlt(java.lang.String alt) {
        return (CreatePlaylist) super.setAlt(alt);
      }

      @Override
      public CreatePlaylist setFields(java.lang.String fields) {
        return (CreatePlaylist) super.setFields(fields);
      }

      @Override
      public CreatePlaylist setKey(java.lang.String key) {
        return (CreatePlaylist) super.setKey(key);
      }

      @Override
      public CreatePlaylist setOauthToken(java.lang.String oauthToken) {
        return (CreatePlaylist) super.setOauthToken(oauthToken);
      }

      @Override
      public CreatePlaylist setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreatePlaylist) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreatePlaylist setQuotaUser(java.lang.String quotaUser) {
        return (CreatePlaylist) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreatePlaylist setUserIp(java.lang.String userIp) {
        return (CreatePlaylist) super.setUserIp(userIp);
      }

      @Override
      public CreatePlaylist set(String parameterName, Object value) {
        return (CreatePlaylist) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "partyqueue.downvote".
     *
     * This request holds the parameters needed by the party_queue server.  After setting any optional
     * parameters, call the {@link Downvote#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongRequest}
     * @return the request
     */
    public Downvote downvote(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongRequest content) throws java.io.IOException {
      Downvote result = new Downvote(content);
      initialize(result);
      return result;
    }

    public class Downvote extends PartyQueueRequest<com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongResponse> {

      private static final String REST_PATH = "downvote_song";

      /**
       * Create a request for the method "partyqueue.downvote".
       *
       * This request holds the parameters needed by the the party_queue server.  After setting any
       * optional parameters, call the {@link Downvote#execute()} method to invoke the remote operation.
       * <p> {@link
       * Downvote#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongRequest}
       * @since 1.13
       */
      protected Downvote(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongRequest content) {
        super(PartyQueue.this, "POST", REST_PATH, content, com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongResponse.class);
      }

      @Override
      public Downvote setAlt(java.lang.String alt) {
        return (Downvote) super.setAlt(alt);
      }

      @Override
      public Downvote setFields(java.lang.String fields) {
        return (Downvote) super.setFields(fields);
      }

      @Override
      public Downvote setKey(java.lang.String key) {
        return (Downvote) super.setKey(key);
      }

      @Override
      public Downvote setOauthToken(java.lang.String oauthToken) {
        return (Downvote) super.setOauthToken(oauthToken);
      }

      @Override
      public Downvote setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Downvote) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Downvote setQuotaUser(java.lang.String quotaUser) {
        return (Downvote) super.setQuotaUser(quotaUser);
      }

      @Override
      public Downvote setUserIp(java.lang.String userIp) {
        return (Downvote) super.setUserIp(userIp);
      }

      @Override
      public Downvote set(String parameterName, Object value) {
        return (Downvote) super.set(parameterName, value);
      }
    }
    /**
     * Returns a playlist based on the plalist id
     *
     * Create a request for the method "partyqueue.get_playlist".
     *
     * This request holds the parameters needed by the party_queue server.  After setting any optional
     * parameters, call the {@link GetPlaylist#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetPlaylist getPlaylist() throws java.io.IOException {
      GetPlaylist result = new GetPlaylist();
      initialize(result);
      return result;
    }

    public class GetPlaylist extends PartyQueueRequest<com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistResponse> {

      private static final String REST_PATH = "get_playlist_by_id";

      /**
       * Returns a playlist based on the plalist id
       *
       * Create a request for the method "partyqueue.get_playlist".
       *
       * This request holds the parameters needed by the the party_queue server.  After setting any
       * optional parameters, call the {@link GetPlaylist#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetPlaylist#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetPlaylist() {
        super(PartyQueue.this, "GET", REST_PATH, null, com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesPlaylistResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetPlaylist setAlt(java.lang.String alt) {
        return (GetPlaylist) super.setAlt(alt);
      }

      @Override
      public GetPlaylist setFields(java.lang.String fields) {
        return (GetPlaylist) super.setFields(fields);
      }

      @Override
      public GetPlaylist setKey(java.lang.String key) {
        return (GetPlaylist) super.setKey(key);
      }

      @Override
      public GetPlaylist setOauthToken(java.lang.String oauthToken) {
        return (GetPlaylist) super.setOauthToken(oauthToken);
      }

      @Override
      public GetPlaylist setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetPlaylist) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetPlaylist setQuotaUser(java.lang.String quotaUser) {
        return (GetPlaylist) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetPlaylist setUserIp(java.lang.String userIp) {
        return (GetPlaylist) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long pid;

      /**

       */
      public java.lang.Long getPid() {
        return pid;
      }

      public GetPlaylist setPid(java.lang.Long pid) {
        this.pid = pid;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long userid;

      /**

       */
      public java.lang.Long getUserid() {
        return userid;
      }

      public GetPlaylist setUserid(java.lang.Long userid) {
        this.userid = userid;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String firstsong;

      /**

       */
      public java.lang.String getFirstsong() {
        return firstsong;
      }

      public GetPlaylist setFirstsong(java.lang.String firstsong) {
        this.firstsong = firstsong;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public GetPlaylist setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @Override
      public GetPlaylist set(String parameterName, Object value) {
        return (GetPlaylist) super.set(parameterName, value);
      }
    }
    /**
     * Gets all playlists and songs in each playlist for a user's id
     *
     * Create a request for the method "partyqueue.get_playlists_for_user".
     *
     * This request holds the parameters needed by the party_queue server.  After setting any optional
     * parameters, call the {@link GetPlaylistsForUser#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetPlaylistsForUser getPlaylistsForUser() throws java.io.IOException {
      GetPlaylistsForUser result = new GetPlaylistsForUser();
      initialize(result);
      return result;
    }

    public class GetPlaylistsForUser extends PartyQueueRequest<com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesMultiplePlaylistResponse> {

      private static final String REST_PATH = "get_playlists_for_user";

      /**
       * Gets all playlists and songs in each playlist for a user's id
       *
       * Create a request for the method "partyqueue.get_playlists_for_user".
       *
       * This request holds the parameters needed by the the party_queue server.  After setting any
       * optional parameters, call the {@link GetPlaylistsForUser#execute()} method to invoke the remote
       * operation. <p> {@link GetPlaylistsForUser#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetPlaylistsForUser() {
        super(PartyQueue.this, "GET", REST_PATH, null, com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesMultiplePlaylistResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetPlaylistsForUser setAlt(java.lang.String alt) {
        return (GetPlaylistsForUser) super.setAlt(alt);
      }

      @Override
      public GetPlaylistsForUser setFields(java.lang.String fields) {
        return (GetPlaylistsForUser) super.setFields(fields);
      }

      @Override
      public GetPlaylistsForUser setKey(java.lang.String key) {
        return (GetPlaylistsForUser) super.setKey(key);
      }

      @Override
      public GetPlaylistsForUser setOauthToken(java.lang.String oauthToken) {
        return (GetPlaylistsForUser) super.setOauthToken(oauthToken);
      }

      @Override
      public GetPlaylistsForUser setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetPlaylistsForUser) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetPlaylistsForUser setQuotaUser(java.lang.String quotaUser) {
        return (GetPlaylistsForUser) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetPlaylistsForUser setUserIp(java.lang.String userIp) {
        return (GetPlaylistsForUser) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long pid;

      /**

       */
      public java.lang.Long getPid() {
        return pid;
      }

      public GetPlaylistsForUser setPid(java.lang.Long pid) {
        this.pid = pid;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Long userid;

      /**

       */
      public java.lang.Long getUserid() {
        return userid;
      }

      public GetPlaylistsForUser setUserid(java.lang.Long userid) {
        this.userid = userid;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String firstsong;

      /**

       */
      public java.lang.String getFirstsong() {
        return firstsong;
      }

      public GetPlaylistsForUser setFirstsong(java.lang.String firstsong) {
        this.firstsong = firstsong;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public GetPlaylistsForUser setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @Override
      public GetPlaylistsForUser set(String parameterName, Object value) {
        return (GetPlaylistsForUser) super.set(parameterName, value);
      }
    }
    /**
     * Gets all playlists and songs in each playlist for a user's id
     *
     * Create a request for the method "partyqueue.get_playlists_for_user_by_name".
     *
     * This request holds the parameters needed by the party_queue server.  After setting any optional
     * parameters, call the {@link GetPlaylistsForUserByName#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public GetPlaylistsForUserByName getPlaylistsForUserByName() throws java.io.IOException {
      GetPlaylistsForUserByName result = new GetPlaylistsForUserByName();
      initialize(result);
      return result;
    }

    public class GetPlaylistsForUserByName extends PartyQueueRequest<com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesMultiplePlaylistResponse> {

      private static final String REST_PATH = "get_playlists_for_user_by_name";

      /**
       * Gets all playlists and songs in each playlist for a user's id
       *
       * Create a request for the method "partyqueue.get_playlists_for_user_by_name".
       *
       * This request holds the parameters needed by the the party_queue server.  After setting any
       * optional parameters, call the {@link GetPlaylistsForUserByName#execute()} method to invoke the
       * remote operation. <p> {@link GetPlaylistsForUserByName#initialize(com.google.api.client.googlea
       * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetPlaylistsForUserByName() {
        super(PartyQueue.this, "GET", REST_PATH, null, com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesMultiplePlaylistResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetPlaylistsForUserByName setAlt(java.lang.String alt) {
        return (GetPlaylistsForUserByName) super.setAlt(alt);
      }

      @Override
      public GetPlaylistsForUserByName setFields(java.lang.String fields) {
        return (GetPlaylistsForUserByName) super.setFields(fields);
      }

      @Override
      public GetPlaylistsForUserByName setKey(java.lang.String key) {
        return (GetPlaylistsForUserByName) super.setKey(key);
      }

      @Override
      public GetPlaylistsForUserByName setOauthToken(java.lang.String oauthToken) {
        return (GetPlaylistsForUserByName) super.setOauthToken(oauthToken);
      }

      @Override
      public GetPlaylistsForUserByName setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetPlaylistsForUserByName) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetPlaylistsForUserByName setQuotaUser(java.lang.String quotaUser) {
        return (GetPlaylistsForUserByName) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetPlaylistsForUserByName setUserIp(java.lang.String userIp) {
        return (GetPlaylistsForUserByName) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String username;

      /**

       */
      public java.lang.String getUsername() {
        return username;
      }

      public GetPlaylistsForUserByName setUsername(java.lang.String username) {
        this.username = username;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String email;

      /**

       */
      public java.lang.String getEmail() {
        return email;
      }

      public GetPlaylistsForUserByName setEmail(java.lang.String email) {
        this.email = email;
        return this;
      }

      @Override
      public GetPlaylistsForUserByName set(String parameterName, Object value) {
        return (GetPlaylistsForUserByName) super.set(parameterName, value);
      }
    }
    /**
     * logs in a user based on username
     *
     * Create a request for the method "partyqueue.login".
     *
     * This request holds the parameters needed by the party_queue server.  After setting any optional
     * parameters, call the {@link Login#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountRequest}
     * @return the request
     */
    public Login login(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountRequest content) throws java.io.IOException {
      Login result = new Login(content);
      initialize(result);
      return result;
    }

    public class Login extends PartyQueueRequest<com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountResponse> {

      private static final String REST_PATH = "login";

      /**
       * logs in a user based on username
       *
       * Create a request for the method "partyqueue.login".
       *
       * This request holds the parameters needed by the the party_queue server.  After setting any
       * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
       * <p> {@link
       * Login#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountRequest}
       * @since 1.13
       */
      protected Login(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountRequest content) {
        super(PartyQueue.this, "POST", REST_PATH, content, com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountResponse.class);
      }

      @Override
      public Login setAlt(java.lang.String alt) {
        return (Login) super.setAlt(alt);
      }

      @Override
      public Login setFields(java.lang.String fields) {
        return (Login) super.setFields(fields);
      }

      @Override
      public Login setKey(java.lang.String key) {
        return (Login) super.setKey(key);
      }

      @Override
      public Login setOauthToken(java.lang.String oauthToken) {
        return (Login) super.setOauthToken(oauthToken);
      }

      @Override
      public Login setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Login) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Login setQuotaUser(java.lang.String quotaUser) {
        return (Login) super.setQuotaUser(quotaUser);
      }

      @Override
      public Login setUserIp(java.lang.String userIp) {
        return (Login) super.setUserIp(userIp);
      }

      @Override
      public Login set(String parameterName, Object value) {
        return (Login) super.set(parameterName, value);
      }
    }
    /**
     * Adds a new user to the datastore
     *
     * Create a request for the method "partyqueue.signup".
     *
     * This request holds the parameters needed by the party_queue server.  After setting any optional
     * parameters, call the {@link Signup#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountRequest}
     * @return the request
     */
    public Signup signup(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountRequest content) throws java.io.IOException {
      Signup result = new Signup(content);
      initialize(result);
      return result;
    }

    public class Signup extends PartyQueueRequest<com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountResponse> {

      private static final String REST_PATH = "signup";

      /**
       * Adds a new user to the datastore
       *
       * Create a request for the method "partyqueue.signup".
       *
       * This request holds the parameters needed by the the party_queue server.  After setting any
       * optional parameters, call the {@link Signup#execute()} method to invoke the remote operation.
       * <p> {@link
       * Signup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountRequest}
       * @since 1.13
       */
      protected Signup(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountRequest content) {
        super(PartyQueue.this, "POST", REST_PATH, content, com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesAccountResponse.class);
      }

      @Override
      public Signup setAlt(java.lang.String alt) {
        return (Signup) super.setAlt(alt);
      }

      @Override
      public Signup setFields(java.lang.String fields) {
        return (Signup) super.setFields(fields);
      }

      @Override
      public Signup setKey(java.lang.String key) {
        return (Signup) super.setKey(key);
      }

      @Override
      public Signup setOauthToken(java.lang.String oauthToken) {
        return (Signup) super.setOauthToken(oauthToken);
      }

      @Override
      public Signup setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Signup) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Signup setQuotaUser(java.lang.String quotaUser) {
        return (Signup) super.setQuotaUser(quotaUser);
      }

      @Override
      public Signup setUserIp(java.lang.String userIp) {
        return (Signup) super.setUserIp(userIp);
      }

      @Override
      public Signup set(String parameterName, Object value) {
        return (Signup) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "partyqueue.upvote".
     *
     * This request holds the parameters needed by the party_queue server.  After setting any optional
     * parameters, call the {@link Upvote#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongRequest}
     * @return the request
     */
    public Upvote upvote(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongRequest content) throws java.io.IOException {
      Upvote result = new Upvote(content);
      initialize(result);
      return result;
    }

    public class Upvote extends PartyQueueRequest<com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongResponse> {

      private static final String REST_PATH = "upvote_song";

      /**
       * Create a request for the method "partyqueue.upvote".
       *
       * This request holds the parameters needed by the the party_queue server.  After setting any
       * optional parameters, call the {@link Upvote#execute()} method to invoke the remote operation.
       * <p> {@link
       * Upvote#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongRequest}
       * @since 1.13
       */
      protected Upvote(com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongRequest content) {
        super(PartyQueue.this, "POST", REST_PATH, content, com.appspot.party_queue_1243.party_queue.model.PartyQueueApiMessagesVoteSongResponse.class);
      }

      @Override
      public Upvote setAlt(java.lang.String alt) {
        return (Upvote) super.setAlt(alt);
      }

      @Override
      public Upvote setFields(java.lang.String fields) {
        return (Upvote) super.setFields(fields);
      }

      @Override
      public Upvote setKey(java.lang.String key) {
        return (Upvote) super.setKey(key);
      }

      @Override
      public Upvote setOauthToken(java.lang.String oauthToken) {
        return (Upvote) super.setOauthToken(oauthToken);
      }

      @Override
      public Upvote setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Upvote) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Upvote setQuotaUser(java.lang.String quotaUser) {
        return (Upvote) super.setQuotaUser(quotaUser);
      }

      @Override
      public Upvote setUserIp(java.lang.String userIp) {
        return (Upvote) super.setUserIp(userIp);
      }

      @Override
      public Upvote set(String parameterName, Object value) {
        return (Upvote) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link PartyQueue}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link PartyQueue}. */
    @Override
    public PartyQueue build() {
      return new PartyQueue(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link PartyQueueRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setPartyQueueRequestInitializer(
        PartyQueueRequestInitializer partyqueueRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(partyqueueRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
